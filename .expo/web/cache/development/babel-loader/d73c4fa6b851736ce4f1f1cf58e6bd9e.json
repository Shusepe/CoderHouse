{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jose\\\\CoderHouse\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Item from \"./components/item.component\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      temp = _useState4[0],\n      setTemp = _useState4[1];\n\n  function onInputChange(e) {\n    var text = e.target.value;\n    setTemp(text);\n  }\n\n  function onAddItem() {\n    var id = items.length + 1;\n    var item = {\n      id: id,\n      name: temp\n    };\n    setItems([].concat(_toConsumableArray(items), [item]));\n    setTemp(\"\");\n  }\n\n  function onDeleteItem(itemId) {\n    var updatedItems = items.filter(function (item) {\n      return item.id != itemId;\n    });\n    setItems(updatedItems);\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Add an item\",\n    style: styles.input,\n    onChange: function onChange(event) {\n      return onInputChange(event);\n    },\n    value: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"ADD\",\n    color: \"#3D9970\",\n    onPress: function onPress() {\n      return onAddItem();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, items.map(function (i) {\n    return React.createElement(Item, {\n      item: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 30,\n    backgroundColor: \"#F0F0F0\",\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  input: {\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1,\n    width: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/Jose/CoderHouse/App.js"],"names":["StatusBar","React","useState","Item","App","items","setItems","temp","setTemp","onInputChange","e","text","target","value","onAddItem","id","length","item","name","onDeleteItem","itemId","updatedItems","filter","styles","screen","inputContainer","input","event","map","i","StyleSheet","create","padding","backgroundColor","flex","flexDirection","alignItems","justifyContent","borderBottomColor","borderBottomWidth","width"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,OAAOC,IAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAEA,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AACAL,IAAAA,OAAO,CAACG,IAAD,CAAP;AACD;;AAED,WAASG,SAAT,GAAqB;AACnB,QAAMC,EAAE,GAAGV,KAAK,CAACW,MAAN,GAAe,CAA1B;AAEA,QAAMC,IAAI,GAAG;AACXF,MAAAA,EAAE,EAAFA,EADW;AAEXG,MAAAA,IAAI,EAAEX;AAFK,KAAb;AAKAD,IAAAA,QAAQ,8BAAKD,KAAL,IAAYY,IAAZ,GAAR;AACAT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAED,WAASW,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,QAAMC,YAAY,GAAGhB,KAAK,CAACiB,MAAN,CAAa,UAACL,IAAD;AAAA,aAAUA,IAAI,CAACF,EAAL,IAAWK,MAArB;AAAA,KAAb,CAArB;AACAd,IAAAA,QAAQ,CAACe,YAAD,CAAR;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,aADd;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAFhB;AAGE,IAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,aAAWlB,aAAa,CAACkB,KAAD,CAAxB;AAAA,KAHZ;AAIE,IAAA,KAAK,EAAEpB,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAMO,SAAS,EAAf;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAAClB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACuB,GAAN,CAAU,UAACC,CAAD;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAV,CADH,CAVF,EAeE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,eAAe,EAAE,SAFX;AAGNC,IAAAA,IAAI,EAAE;AAHA,GADuB;AAM/BT,EAAAA,cAAc,EAAE;AACdU,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,UAAU,EAAE,QAFE;AAGdC,IAAAA,cAAc,EAAE;AAHF,GANe;AAW/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,iBAAiB,EAAE,OADd;AAELC,IAAAA,iBAAiB,EAAE,CAFd;AAGLC,IAAAA,KAAK,EAAE;AAHF;AAXwB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, TextInput, View, Button } from \"react-native\";\n\nimport Item from \"./components/item.component\";\n\nexport default function App() {\n  const [items, setItems] = useState([]);\n  const [temp, setTemp] = useState(\"\");\n\n  function onInputChange(e) {\n    const text = e.target.value;\n    setTemp(text);\n  }\n\n  function onAddItem() {\n    const id = items.length + 1;\n\n    const item = {\n      id,\n      name: temp,\n    };\n\n    setItems([...items, item]);\n    setTemp(\"\");\n  }\n\n  function onDeleteItem(itemId) {\n    const updatedItems = items.filter((item) => item.id != itemId);\n    setItems(updatedItems);\n  }\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Add an item\"\n          style={styles.input}\n          onChange={(event) => onInputChange(event)}\n          value={temp}\n        />\n        <Button title=\"ADD\" color=\"#3D9970\" onPress={() => onAddItem()} />\n      </View>\n      <View style={styles.items}>\n        {items.map((i) => (\n          <Item item={i} />\n        ))}\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 30,\n    backgroundColor: \"#F0F0F0\",\n    flex: 1,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  input: {\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1,\n    width: 200,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}