{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jose\\\\CoderHouse\\\\screens\\\\add.screen.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { addAddress } from \"../store/actions/address.action\";\n\nfunction AddScreen() {\n  var items = useSelector(function (state) {\n    return state.address.listOfAddress;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nombre = _useState4[0],\n      setNombre = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      direccion = _useState6[0],\n      setDireccion = _useState6[1];\n\n  function onAddItem() {\n    var id = items.length + 1;\n    var item = {\n      id: id,\n      name: nombre,\n      address: direccion,\n      description: text\n    };\n    console.log(item);\n    dispatch(addAddress(item));\n    setText(\"\");\n    setNombre(\"\");\n    setDireccion(\"\");\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"Nombre\",\n    style: styles.input,\n    value: nombre,\n    onChangeText: function onChangeText(input) {\n      return setNombre(input);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Direcci\\xF3n\",\n    style: styles.input,\n    value: direccion,\n    onChangeText: function onChangeText(input) {\n      return setDireccion(input);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Descripci\\xF3n\",\n    style: styles.input,\n    value: text,\n    onChangeText: function onChangeText(input) {\n      return setText(input);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: StyleSheet.ButtonContainer,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return onAddItem();\n    },\n    styles: styles.ButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Agregar\")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: \"#E1E8EB\",\n    flex: 1,\n    paddingTop: Platform.OS !== \"ios\" ? 25 : 50,\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingBottom: 30\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  input: {\n    flex: 0.9\n  },\n  ButtonContainer: {\n    justifyContent: \"flex-end\"\n  }\n});\nexport default connect()(AddScreen);","map":{"version":3,"sources":["C:/Users/Jose/CoderHouse/screens/add.screen.js"],"names":["StatusBar","React","useState","Button","TextInput","useSelector","useDispatch","connect","addAddress","AddScreen","items","state","address","listOfAddress","dispatch","text","setText","nombre","setNombre","direccion","setDireccion","onAddItem","id","length","item","name","description","console","log","styles","screen","inputContainer","input","StyleSheet","ButtonContainer","create","backgroundColor","flex","paddingTop","Platform","OS","paddingLeft","paddingRight","paddingBottom","flexDirection","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport { StyleSheet, View, Platform } from \"react-native\";\r\nimport { Button, TextInput } from \"react-native-paper\";\r\nimport { useSelector, useDispatch, connect } from \"react-redux\";\r\n\r\nimport { addAddress } from \"../store/actions/address.action\";\r\n\r\nfunction AddScreen() {\r\n  const items = useSelector((state) => state.address.listOfAddress);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [direccion, setDireccion] = useState(\"\");\r\n\r\n  function onAddItem() {\r\n    const id = items.length + 1;\r\n\r\n    const item = {\r\n      id,\r\n      name: nombre,\r\n      address: direccion,\r\n      description: text,\r\n    };\r\n\r\n    console.log(item);\r\n\r\n    dispatch(addAddress(item));\r\n    setText(\"\");\r\n    setNombre(\"\");\r\n    setDireccion(\"\");\r\n  }\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          label=\"Nombre\"\r\n          style={styles.input}\r\n          value={nombre}\r\n          onChangeText={(input) => setNombre(input)}\r\n        />\r\n        <TextInput\r\n          label=\"Dirección\"\r\n          style={styles.input}\r\n          value={direccion}\r\n          onChangeText={(input) => setDireccion(input)}\r\n        />\r\n        <TextInput\r\n          label=\"Descripción\"\r\n          style={styles.input}\r\n          value={text}\r\n          onChangeText={(input) => setText(input)}\r\n        />\r\n        <Button\r\n          style={StyleSheet.ButtonContainer}\r\n          mode=\"contained\"\r\n          onPress={() => onAddItem()}\r\n          styles={styles.ButtonContainer}\r\n        >\r\n          Agregar\r\n        </Button>\r\n      </View>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    backgroundColor: \"#E1E8EB\",\r\n    flex: 1,\r\n    paddingTop: Platform.OS !== \"ios\" ? 25 : 50,\r\n    paddingLeft: 30,\r\n    paddingRight: 30,\r\n    paddingBottom: 30,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  input: {\r\n    flex: 0.9,\r\n  },\r\n  ButtonContainer: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\n\r\nexport default connect()(AddScreen);\r\n"]},"metadata":{},"sourceType":"module"}