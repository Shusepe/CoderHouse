{"ast":null,"code":"import * as SQLite from \"expo-sqlite\";\nvar db = SQLite.openDatabase(\"address.db\");\nexport var init = function init() {\n  var promise = new Promise(function (resolve, reject) {\n    db.transaction(function (tx) {\n      tx.executeSql(\"CREATE TABLE IF NOT EXISTS address (\\n          id INTEGER PRIMARY KEY NOT NULL,\\n          title TEXT NOT NULL,\\n          image TEXT NOT NULL,\\n          address TEXT NOT NULL,\\n          lat REAL NOT NULL,\\n          lng REAL NOT NULL\\n        )\", [], function () {\n        resolve();\n      }, function (_, err) {\n        reject(err);\n      });\n    });\n  });\n  return promise;\n};\nexport var insertAddress = function insertAddress(title, image, address, lat, lng) {\n  var promise = new Promise(function (resolve, reject) {\n    db.transaction(function (tx) {\n      tx.executeSql(\"INSERT INTO address (title, image, address, lat, lng) VALUES (?, ?, ?, ?, ?)\", [title, image, address, lat, lng], function (_, result) {\n        return resolve(result);\n      }, function (_, err) {\n        return reject(err);\n      });\n    });\n  });\n  return promise;\n};\nexport var fetchAddress = function fetchAddress() {\n  var promise = new Promise(function (resolve, reject) {\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT * FROM address;\", [], function (_, result) {\n        return resolve(result);\n      }, function (_, err) {\n        return reject(err);\n      });\n    });\n  });\n  return promise;\n};","map":{"version":3,"sources":["C:/Users/Jose/CoderHouse/db/index.js"],"names":["SQLite","db","openDatabase","init","promise","Promise","resolve","reject","transaction","tx","executeSql","_","err","insertAddress","title","image","address","lat","lng","result","fetchAddress"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AAEA,IAAMC,EAAE,GAAGD,MAAM,CAACE,YAAP,CAAoB,YAApB,CAAX;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/CN,IAAAA,EAAE,CAACO,WAAH,CAAe,UAACC,EAAD,EAAQ;AACrBA,MAAAA,EAAE,CAACC,UAAH,6PASE,EATF,EAUE,YAAM;AACJJ,QAAAA,OAAO;AACR,OAZH,EAaE,UAACK,CAAD,EAAIC,GAAJ,EAAY;AACVL,QAAAA,MAAM,CAACK,GAAD,CAAN;AACD,OAfH;AAiBD,KAlBD;AAmBD,GApBe,CAAhB;AAsBA,SAAOR,OAAP;AACD,CAxBM;AA0BP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAqC;AAChE,MAAMd,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/CN,IAAAA,EAAE,CAACO,WAAH,CAAe,UAACC,EAAD,EAAQ;AACrBA,MAAAA,EAAE,CAACC,UAAH,iFAEE,CAACI,KAAD,EAAQC,KAAR,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,GAA7B,CAFF,EAGE,UAACP,CAAD,EAAIQ,MAAJ;AAAA,eAAeb,OAAO,CAACa,MAAD,CAAtB;AAAA,OAHF,EAIE,UAACR,CAAD,EAAIC,GAAJ;AAAA,eAAYL,MAAM,CAACK,GAAD,CAAlB;AAAA,OAJF;AAMD,KAPD;AAQD,GATe,CAAhB;AAWA,SAAOR,OAAP;AACD,CAbM;AAeP,OAAO,IAAMgB,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,MAAMhB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/CN,IAAAA,EAAE,CAACO,WAAH,CAAe,UAACC,EAAD,EAAQ;AACrBA,MAAAA,EAAE,CAACC,UAAH,CACE,wBADF,EAEE,EAFF,EAGE,UAACC,CAAD,EAAIQ,MAAJ;AAAA,eAAeb,OAAO,CAACa,MAAD,CAAtB;AAAA,OAHF,EAIE,UAACR,CAAD,EAAIC,GAAJ;AAAA,eAAYL,MAAM,CAACK,GAAD,CAAlB;AAAA,OAJF;AAMD,KAPD;AAQD,GATe,CAAhB;AAWA,SAAOR,OAAP;AACD,CAbM","sourcesContent":["import * as SQLite from \"expo-sqlite\";\r\n\r\nconst db = SQLite.openDatabase(\"address.db\");\r\n\r\nexport const init = () => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS address (\r\n          id INTEGER PRIMARY KEY NOT NULL,\r\n          title TEXT NOT NULL,\r\n          image TEXT NOT NULL,\r\n          address TEXT NOT NULL,\r\n          lat REAL NOT NULL,\r\n          lng REAL NOT NULL\r\n        )`,\r\n        [],\r\n        () => {\r\n          resolve();\r\n        },\r\n        (_, err) => {\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const insertAddress = (title, image, address, lat, lng) => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        `INSERT INTO address (title, image, address, lat, lng) VALUES (?, ?, ?, ?, ?)`,\r\n        [title, image, address, lat, lng],\r\n        (_, result) => resolve(result),\r\n        (_, err) => reject(err)\r\n      );\r\n    });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const fetchAddress = () => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        \"SELECT * FROM address;\",\r\n        [],\r\n        (_, result) => resolve(result),\r\n        (_, err) => reject(err)\r\n      );\r\n    });\r\n  });\r\n\r\n  return promise;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}