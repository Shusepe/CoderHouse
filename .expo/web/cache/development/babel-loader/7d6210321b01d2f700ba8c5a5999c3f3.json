{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jose\\\\CoderHouse\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport ListScreen from \"./screens/list.screen\";\nimport AddScreen from \"./screens/add.screen\";\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddScreen = _useState4[0],\n      setIsAddScreen = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, isAddScreen ? React.createElement(AddScreen, {\n    items: items,\n    setItems: setItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }) : React.createElement(ListScreen, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \" Pepito \"), React.createElement(Button, {\n    style: styles.type,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return setIsAddScreen(!isAddScreen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, isAddScreen ? \"Ver Modo Lista\" : \"Agregar Item\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Jose/CoderHouse/App.js"],"names":["StatusBar","React","useState","Button","TextInput","ListScreen","AddScreen","App","items","setItems","isAddScreen","setIsAddScreen","styles","container","type","StyleSheet","create","flex"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AAEA,OAAOC,UAAP;AACA,OAAOC,SAAP;;AAEA,SAASC,GAAT,GAAe;AACb,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsCP,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,cAApB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,GACV,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAlB;AAAyB,IAAA,QAAQ,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAGV,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAED,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EASE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACE,IADhB;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMH,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,WAAW,GAAG,gBAAH,GAAsB,cALpC,CATF,CADF;AAmBD;;AAED,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;AAMA,eAAeV,GAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport { StyleSheet, View, Platform, Text } from \"react-native\";\r\nimport { Button, TextInput } from \"react-native-paper\";\r\n\r\nimport ListScreen from \"./screens/list.screen\";\r\nimport AddScreen from \"./screens/add.screen\";\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]);\r\n  const [isAddScreen, setIsAddScreen] = useState(true);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {isAddScreen ? (\r\n        <AddScreen items={items} setItems={setItems} />\r\n      ) : (\r\n        <ListScreen items={items} />\r\n      )}\r\n\r\n      <Text style={styles.type}> Pepito </Text>\r\n\r\n      <Button\r\n        style={styles.type}\r\n        mode=\"contained\"\r\n        onPress={() => setIsAddScreen(!isAddScreen)}\r\n      >\r\n        {isAddScreen ? \"Ver Modo Lista\" : \"Agregar Item\"}\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}