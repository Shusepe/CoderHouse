{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_ADDRESS, DELETE_ADDRESS } from \"../types/address.type\";\nvar INITIAL_STATE = {\n  listOfAddress: []\n};\n\nvar AddressReducer = function AddressReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ADDRESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfAddress: [].concat(_toConsumableArray(state.listOfAddress), [action.payload])\n      });\n\n    case DELETE_ADDRESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfAddress: state.listOfAddress.filter(function (item) {\n          return item.id != action.payload;\n        })\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default AddressReducer;","map":{"version":3,"sources":["C:/Users/Jose/CoderHouse/store/reducers/address.reducer.js"],"names":["ADD_ADDRESS","DELETE_ADDRESS","INITIAL_STATE","listOfAddress","AddressReducer","state","action","type","payload","filter","item","id"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,cAAtB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,aAAa,EAAE;AADK,CAAtB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,6CACKK,KADL;AAEEF,QAAAA,aAAa,+BAAME,KAAK,CAACF,aAAZ,IAA2BG,MAAM,CAACE,OAAlC;AAFf;;AAKF,SAAKP,cAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBM,MAApB,CACb,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACE,OAA5B;AAAA,SADa;AAFjB;;AAOF;AACE,+BAAYH,KAAZ;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,cAAf","sourcesContent":["import { ADD_ADDRESS, DELETE_ADDRESS } from \"../types/address.type\";\n\nconst INITIAL_STATE = {\n  listOfAddress: [],\n};\n\nconst AddressReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_ADDRESS:\n      return {\n        ...state,\n        listOfAddress: [...state.listOfAddress, action.payload],\n      };\n\n    case DELETE_ADDRESS:\n      return {\n        ...state,\n        listOfAddress: state.listOfAddress.filter(\n          (item) => item.id != action.payload\n        ),\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default AddressReducer;\n"]},"metadata":{},"sourceType":"module"}